[gd_scene load_steps=7 format=2]

[ext_resource path="res://Mob.tscn" type="PackedScene" id=1]
[ext_resource path="res://Coffee.tscn" type="PackedScene" id=2]
[ext_resource path="res://Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://HUD.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export (PackedScene) var Mob
export (PackedScene) var Coffee
var score
var denial
var mobs

func _ready():
	randomize()
	
func _input(event):
	if event.is_action_pressed(\"deny_everything\"):
		if(self.denial != 0):
			remove_all_mobs()
			denial -= 1
			$HUD.show_denial_count(denial)

func _on_Player_hit():
	$ScoreTimer.stop()
	$MobTimer.stop()
	$HUD.show_game_over()

func new_game():
	score = 0
	denial = 3
	$HUD.update_score(score)
	$HUD.show_denial_count(denial)
	$HUD.show_message(\"Get Ready\")
	$Player.start($StartPosition.position)
	$StartTimer.start()
	remove_all_mobs()

func _on_StartTimer_timeout():
	$MobTimer.start();
	$ScoreTimer.start();
	denial = 3
	$HUD.show_denial_count(denial)

func _on_ScoreTimer_timeout():
	score += 1;
	$HUD.update_score(score)

func _on_MobTimer_timeout():
	# Choose a random location on Path2D.
	$MobPath/MobSpawnLocation.set_offset(randi())
	
	var mob = Mob.instance() if randi() % 100 < 90 else Coffee.instance() 
	add_child(mob)
    # Set the mob's direction perpendicular to the path direction.
	var direction = $MobPath/MobSpawnLocation.rotation + PI / 2
    # Set the mob's position to a random location.
	mob.position = $MobPath/MobSpawnLocation.position
    # Add some randomness to the direction.
	direction += rand_range(-PI / 4, PI / 4)
	mob.rotation = direction
    # Set the velocity (speed & direction).
	mob.linear_velocity = Vector2(rand_range(mob.min_speed, mob.max_speed), 0)
	mob.linear_velocity = mob.linear_velocity.rotated(direction)

func _on_HUD_start_game():
	new_game()

func remove_all_mobs():
	for child in get_tree().get_nodes_in_group(\"objects\"):
		child.queue_free()

func _on_Player_something_positive(id):
	score *= 2
	$HUD.show_double_score()
	$HUD.update_score(score)"

[sub_resource type="Curve2D" id=2]
_data = {
"points": PoolVector2Array( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1020, 0, 0, 0, 0, 0, 1020, 600, 0, 0, 0, 0, 0, 600, 0, 0, 0, 0, 0, 0 )
}

[node name="Main" type="Node2D"]
script = SubResource( 1 )
Mob = ExtResource( 1 )
Coffee = ExtResource( 2 )

[node name="Player" parent="." instance=ExtResource( 3 )]

[node name="MobTimer" type="Timer" parent="."]
wait_time = 0.5

[node name="ScoreTimer" type="Timer" parent="."]

[node name="StartTimer" type="Timer" parent="."]
wait_time = 2.0
one_shot = true

[node name="StartPosition" type="Position2D" parent="."]
position = Vector2( 240, 450 )

[node name="MobPath" type="Path2D" parent="."]
curve = SubResource( 2 )

[node name="MobSpawnLocation" type="PathFollow2D" parent="MobPath"]

[node name="HUD" parent="." instance=ExtResource( 4 )]
[connection signal="hit" from="Player" to="." method="_on_Player_hit"]
[connection signal="something_positive" from="Player" to="." method="_on_Player_something_positive"]
[connection signal="timeout" from="MobTimer" to="." method="_on_MobTimer_timeout"]
[connection signal="timeout" from="ScoreTimer" to="." method="_on_ScoreTimer_timeout"]
[connection signal="timeout" from="StartTimer" to="." method="_on_StartTimer_timeout"]
[connection signal="start_game" from="HUD" to="." method="_on_HUD_start_game"]
